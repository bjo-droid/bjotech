{"version":3,"sources":["components/Nav.jsx","components/LibrarySong.jsx","components/Library.jsx","components/Song.jsx","utils/formatTime.js","components/Player.jsx","App.jsx","utils/generateSongs.js","hooks/useIsFirstRender.js","index.jsx"],"names":["Nav","isLibraryOpen","setIsLibraryOpen","className","onClick","isOpen","LibrarySong","song","isCurrent","setCurrentSongId","id","src","cover","alt","name","artist","Library","songs","currentSongId","length","map","Song","status","formatTime","seconds","isNaN","minutes","Math","floor","slice","Player","currentSong","setStatus","useState","currentTime","duration","songInfo","setSongInfo","audioRef","useRef","toggleStatus","current","play","pause","updateSongInfo","event","target","nextSong","currentSongIndex","findIndex","s","useEffect","paused","style","background","color","type","min","max","value","onChange","transform","ref","audio","onEnded","onTimeUpdate","onLoadedData","preload","App","uuidv4","isFirstRender","isFirstRenderRef","useIsFirstRender","useMemo","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4383d25c.chunk.js","sourcesContent":["import { FaMusic } from 'react-icons/fa'\r\n\r\nexport const Nav = ({ isLibraryOpen, setIsLibraryOpen }) => {\r\n    return (\r\n        <nav className={`${isLibraryOpen ? 'squeezed' : ''}`}>\r\n            <h1>Waves</h1>\r\n            <button\r\n                onClick={() => setIsLibraryOpen((isOpen) => !isOpen)}\r\n                className={`${isLibraryOpen ? 'open' : ''}`}\r\n            >\r\n                <FaMusic />\r\n                Library\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n","export const LibrarySong = ({ song, isCurrent, setCurrentSongId }) => {\r\n    return (\r\n        <div\r\n            className={`library-song ${isCurrent ? 'playing' : ''}`}\r\n            onClick={() => setCurrentSongId(song.id)}\r\n        >\r\n            <div className=\"song-cover\">\r\n                <img src={song.cover} alt={song.name} />\r\n            </div>\r\n            <div className=\"song-description\">\r\n                <h3 className=\"song-name\">{song.name}</h3>\r\n                <h4 className=\"song-artist\">{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { LibrarySong } from './LibrarySong'\r\n\r\nexport const Library = ({\r\n    songs,\r\n    currentSongId,\r\n    setCurrentSongId,\r\n    isLibraryOpen,\r\n}) => {\r\n    return (\r\n        <div className={`library ${isLibraryOpen ? 'open' : ''}`}>\r\n            <div className=\"library-songs\">\r\n                {songs && songs.length > 0\r\n                    ? songs.map((song) => (\r\n                          <LibrarySong\r\n                              key={song.id}\r\n                              song={song}\r\n                              isCurrent={song.id === currentSongId}\r\n                              setCurrentSongId={setCurrentSongId}\r\n                          />\r\n                      ))\r\n                    : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const Song = ({ song, status }) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <div className=\"song-cover\">\r\n                <img\r\n                    src={song?.cover}\r\n                    alt={song?.name}\r\n                    className={status === 'PLAYING' ? 'spinning' : ''}\r\n                />\r\n            </div>\r\n            <h1 className=\"song-name\">{song?.name}</h1>\r\n            <h3 className=\"song-artist\">{song?.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n","export function formatTime(seconds) {\r\n    if (typeof seconds !== 'number' || isNaN(seconds)) {\r\n        return '0:00'\r\n    }\r\n\r\n    const minutes = Math.floor(seconds / 60)\r\n    seconds = `0${Math.floor(seconds % 60)}`.slice(-2)\r\n\r\n    return `${minutes}:${seconds}`\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa'\r\nimport { formatTime } from '../utils/formatTime'\r\n\r\nexport const Player = ({\r\n    songs,\r\n    currentSong,\r\n    setCurrentSongId,\r\n    status,\r\n    setStatus,\r\n}) => {\r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0,\r\n    })\r\n\r\n    const audioRef = useRef(null)\r\n\r\n    // Toggles the status between PAUSED and PLAYING\r\n    // and plays/pauses the audio\r\n    function toggleStatus() {\r\n        if (audioRef.current) {\r\n            if (status === 'PAUSED') {\r\n                audioRef.current.play()\r\n                setStatus('PLAYING')\r\n            } else {\r\n                audioRef.current.pause()\r\n                setStatus('PAUSED')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Moves the currentTime whenever the slider is dragged\r\n    function seek(event) {\r\n        const { value } = event.target\r\n\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = value\r\n        }\r\n    }\r\n\r\n    // Update the state whenever currentTime changes\r\n    function updateSongInfo(event) {\r\n        const { currentTime, duration } = event.target\r\n\r\n        setSongInfo({\r\n            currentTime: currentTime || 0,\r\n            duration: duration || 0,\r\n        })\r\n    }\r\n\r\n    // Set the currentSongId to the id of the song previous of the current song\r\n    function previousSong() {\r\n        const currentSongIndex = songs.findIndex((s) => s.id === currentSong.id)\r\n\r\n        if (currentSongIndex !== 0) {\r\n            setCurrentSongId(songs[currentSongIndex - 1].id)\r\n        } else {\r\n            setCurrentSongId(songs[songs.length - 1].id)\r\n        }\r\n    }\r\n\r\n    // Set the currentSongId to the id of the song next of the current song\r\n    function nextSong() {\r\n        const currentSongIndex = songs.findIndex((s) => s.id === currentSong.id)\r\n\r\n        if (currentSongIndex < songs.length - 1) {\r\n            setCurrentSongId(songs[currentSongIndex + 1].id)\r\n        } else {\r\n            setCurrentSongId(songs[0].id)\r\n        }\r\n    }\r\n\r\n    // Automatically play the song whenever the status\r\n    // or current song changes\r\n    useEffect(() => {\r\n        if (status === 'PLAYING' && audioRef.current?.paused) {\r\n            audioRef.current.play()\r\n        }\r\n    }, [status, currentSong])\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{formatTime(songInfo.currentTime)}</p>\r\n                <div\r\n                    className=\"track\"\r\n                    style={{\r\n                        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]} )`,\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"range\"\r\n                        min={0}\r\n                        max={songInfo.duration}\r\n                        value={songInfo.currentTime}\r\n                        onChange={seek}\r\n                    />\r\n                    <div\r\n                        className=\"animated-track\"\r\n                        style={{\r\n                            transform: `translateX(${\r\n                                (songInfo.currentTime / songInfo.duration) * 100\r\n                            }%)`,\r\n                        }}\r\n                    ></div>\r\n                </div>\r\n                <p>{formatTime(songInfo.duration)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FaStepBackward onClick={previousSong} />\r\n                {status === 'PAUSED' ? (\r\n                    <FaPlay onClick={toggleStatus} />\r\n                ) : (\r\n                    <FaPause onClick={toggleStatus} />\r\n                )}\r\n                <FaStepForward onClick={nextSong} />\r\n            </div>\r\n            <audio\r\n                ref={audioRef}\r\n                src={currentSong?.audio}\r\n                onEnded={nextSong}\r\n                onTimeUpdate={updateSongInfo}\r\n                onLoadedData={updateSongInfo}\r\n                preload=\"true\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useMemo, useState } from \"react\";\nimport { Nav } from \"./components/Nav\";\nimport { Library } from \"./components/Library\";\nimport { Song } from \"./components/Song\";\nimport { Player } from \"./components/Player\";\nimport { generateSongs } from \"./utils/generateSongs\";\nimport { useIsFirstRender } from \"./hooks/useIsFirstRender\";\n\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [songs] = useState(generateSongs());\n  const [currentSongId, setCurrentSongId] = useState(songs[0].id);\n  const [status, setStatus] = useState(\"PAUSED\");\n  const [isLibraryOpen, setIsLibraryOpen] = useState(false);\n  const isFirstRender = useIsFirstRender();\n\n  // Gets the current song using the currentSongId\n  const currentSong = useMemo(\n    () => songs.find((s) => s.id === currentSongId),\n    [songs, currentSongId]\n  );\n\n  // Set status to PLAYING whenever the current song changes\n  useEffect(() => {\n    if (!isFirstRender) {\n      setStatus(\"PLAYING\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSongId]);\n\n  return (\n    <div className=\"app\">\n      <Nav isLibraryOpen={isLibraryOpen} setIsLibraryOpen={setIsLibraryOpen} />\n      <main className={`${isLibraryOpen ? \"squeezed\" : \"\"}`}>\n        <Song song={currentSong} status={status} />\n        <Player\n          songs={songs}\n          currentSong={currentSong}\n          setCurrentSongId={setCurrentSongId}\n          status={status}\n          setStatus={setStatus}\n        />\n      </main>\n      <Library\n        songs={songs}\n        currentSongId={currentSongId}\n        setCurrentSongId={setCurrentSongId}\n        isLibraryOpen={isLibraryOpen}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const generateSongs = () => [\r\n  {\r\n    name: \"Daylight\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n    artist: \"Aiguille\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n    color: [\"#EF8EA9\", \"#ab417f\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Keep Going\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n    artist: \"Swørn\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n    color: [\"#CD607D\", \"#c94043\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Beaver Creek\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n    artist: \"Aso, Middle School, Aviino\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n    color: [\"#205950\", \"#2ab3bf\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Nightfall\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n    artist: \"Aiguille\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n    color: [\"#EF8EA9\", \"#ab417f\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Reflection\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n    artist: \"Swørn\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n    color: [\"#CD607D\", \"#c94043\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Under the City Stars\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n    artist: \"Aso, Middle School, Aviino\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n    color: [\"#205950\", \"#2ab3bf\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Daylight\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n    artist: \"Aiguille\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n    color: [\"#EF8EA9\", \"#ab417f\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Keep Going\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n    artist: \"Swørn\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n    color: [\"#CD607D\", \"#c94043\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Beaver Creek\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n    artist: \"Aso, Middle School, Aviino\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n    color: [\"#205950\", \"#2ab3bf\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Nightfall\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n    artist: \"Aiguille\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n    color: [\"#EF8EA9\", \"#ab417f\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Reflection\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n    artist: \"Swørn\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n    color: [\"#CD607D\", \"#c94043\"],\r\n    id: uuidv4(),\r\n  },\r\n  {\r\n    name: \"Under the City Stars\",\r\n    cover:\r\n      \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n    artist: \"Aso, Middle School, Aviino\",\r\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n    color: [\"#205950\", \"#2ab3bf\"],\r\n    id: uuidv4(),\r\n  },\r\n];\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useIsFirstRender = () => {\r\n    const isFirstRenderRef = useRef(true)\r\n\r\n    useEffect(() => {\r\n        isFirstRenderRef.current = false\r\n    }, [])\r\n\r\n    return isFirstRenderRef.current\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}